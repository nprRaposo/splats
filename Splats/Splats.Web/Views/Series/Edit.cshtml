@model Splats.Data.Entities.Serie

<script src="~/Scripts/Serie/editSerie.js"></script>

<div class="modal-content modal-sm" id="mdlEditSerie">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
		<h4 class="modal-title">Edit @Model.Name</h4>
	</div>
	<div class="modal-body">
		@using (Html.BeginForm("Edit", "Series", FormMethod.Post, new { id = "editSerieFrm"}))
		{
			@Html.AntiForgeryToken()

			<div class="form-horizontal">
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(model => model.Id)

				<div class="form-group">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.DirectorId, "Director", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.SplatsCombo("DirectorId", (SelectList)ViewBag.Directors, new { @class = "col-md-10 form-control select" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Seasons, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Seasons, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Seasons, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ImageUrl, "Image", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		}
	</div>
	<div class="modal-footer">
		<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
		<button type="button" class="btn btn-primary" id="btnSave">Save</button>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
